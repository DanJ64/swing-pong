/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pong;

import java.awt.event.*;
import java.awt.*;
import java.awt.image.*;
import java.util.*;
import draw.*;
import sound.*;
import static java.awt.event.KeyEvent.*;

/**
 *
 * @author victor
 */
public class PongApp extends javax.swing.JFrame {

    javax.swing.Timer timer;
    Set<Integer> keys;
    int puntos1;
    int puntos2;

    Sprite pala1;
    Sprite pala2;
    Pelota bola;

    /**
     * Creates new form PongApp
     */
    public PongApp() {
        initComponents();
        inicializar();

    }

    public void inicializar() {
        // Las teclas pulsadas en cada momento
        keys = new HashSet<Integer>();

        // sprites
        pala1 = new Sprite("pala.png", 30, 300);
        pala2 = new Sprite("pala.png", 800 - 30, 300);
        bola = new Pelota(pala1, pala2);
        
        // marcadores
        puntos1 = 0;
        puntos2 = 0;

        // Crear el timer y asociarlo a un método que dibuje
        // un fotograma
        int delay = 40; //milliseconds
        ActionListener task = new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                dibujarFotograma(); // Se invoca cada 40 ms
            }
        };
        timer = new javax.swing.Timer(delay, task);
        timer.start();
//        Como en este caso el timer solo se pone en marcha, y no se para
//        podría ser local

    }

    public void dibujarFotograma() {
        // obtener un buffer
        // Pintamos en un buffer para evitar el parpadeo del redibujado
        Image buff = new java.awt.image.BufferedImage(this.getWidth(), this.getHeight(), java.awt.image.BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = (Graphics2D) buff.getGraphics();

        // fondo 
        g.setColor(Color.BLACK);
        g.fillRect(0, 0, this.getWidth(), this.getHeight());
        g.setColor(Color.WHITE);
        g.drawLine(30, 60, 800 - 30, 60);// linea arriba
        g.drawLine(30, 600 - 30, 800 - 30, 600 - 30);// linea abajo
        g.drawLine(400, 60, 400, 600 - 30);// linea centro
        

        // marcador
        g.setColor(Color.BLACK);
        g.setFont(new java.awt.Font("Lucida console", Font.PLAIN, 20));
        g.drawString("marcador", 280, 50);

        // figuras
        bola.dibujar(g);
        pala1.dibujar(g);
        pala2.dibujar(g);

        // movimiento:
        // automáticos
        bola.mover();
        
        
        // por eventos
 
        /*if (keys.contains(VK_LEFT)) {
            bola.setX(bola.getX() - 5);
        }
        if (keys.contains(VK_RIGHT)) {
            bola.setX(bola.getX() + 5);
        }
        if (keys.contains(VK_SPACE)) {
            StdSound.beep();
        }
*/    
 
        if(keys.contains(VK_W)){
            /*if(!pala1.getY() == 60){
                
            }*/
            pala1.setY(pala1.getY() - 10);
        }
        if(keys.contains(VK_S)){
            pala1.setY(pala1.getY() + 10);
        }
        
        if(keys.contains(VK_UP)){
            pala2.setY(pala2.getY() - 10);
        }
        if(keys.contains(VK_DOWN)){
            pala2.setY(pala2.getY() + 10);
        }
        
        if(bola.getEstado() == 1){
            //DAR PUNTUACION Y RESETEAR LA BOLA
        }
        
        // dibujar el buffer en el frame
        this.getGraphics().drawImage(buff, 0, 0, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 736, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 424, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        keys.add(evt.getKeyCode());
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        keys.remove(evt.getKeyCode());
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PongApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PongApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PongApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PongApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PongApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
